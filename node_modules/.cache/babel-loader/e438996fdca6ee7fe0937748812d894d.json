{"ast":null,"code":"var _jsxFileName = \"/home/joduss/Documents/Programmation/react/beecoming-test/src/pages/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useMemo } from 'react';\nimport Navigation from '../components/Navigation';\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = ['places'];\n\nconst MyMap = () => {\n  _s();\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries\n  });\n  const center = useMemo(() => ({\n    lat: 44,\n    lng: -80\n  }), []);\n  const [villes, setVilles] = useState({});\n  const cookiesName = 'villes';\n  if (loadError) return \"Error loading maps : \" + loadError;\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 26\n  }, this);\n\n  const Markers = () => {\n    if (JSON.parse(localStorage.getItem(cookiesName)) !== null) {\n      setVilles(JSON.parse(localStorage.getItem(cookiesName)));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(villes).map(villes => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: villes[\"lat\"],\n          lng: villes[\"lng\"]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 57\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerClassName: \"map-container\",\n      zoom: 10,\n      center: center,\n      zIndex: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyMap, \"wMHwSjfoCIxbCb/kzz74nIEHr/0=\", true);\n\n_c = MyMap;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMap\");","map":{"version":3,"names":["React","useState","useMemo","Navigation","Map","GoogleApiWrapper","libraries","MyMap","isLoaded","loadError","useLoadScript","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","center","lat","lng","villes","setVilles","cookiesName","Markers","JSON","parse","localStorage","getItem","Object","entries","map"],"sources":["/home/joduss/Documents/Programmation/react/beecoming-test/src/pages/Map.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMemo } from 'react';\nimport Navigation from '../components/Navigation';\nimport {Map, GoogleApiWrapper } from \"google-maps-react\";\n\nconst libraries = ['places']\n\nconst MyMap = () => {\n    const {isLoaded, loadError} = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const center = useMemo(() => ({ lat: 44, lng: -80 }), []);\n    const [villes, setVilles] = useState({});\n    const cookiesName = 'villes';\n\n    if(loadError) return \"Error loading maps : \" + loadError;\n    if(!isLoaded) return <div>Loading...</div>;\n\n    const Markers = () =>{\n        if(JSON.parse(localStorage.getItem(cookiesName)) !== null){\n            setVilles(JSON.parse(localStorage.getItem(cookiesName)));\n        }\n        return (\n            <div>\n            {\n                Object.entries(villes).map((villes) => (<Marker position={{ lat: villes[\"lat\"], lng: villes[\"lng\"] }}/>))\n            }\n            </div>\n        )\n\n    }\n\n    return (\n    <div>\n        <Navigation/>\n        <GoogleMap mapContainerClassName=\"map-container\" zoom={10} center={center} zIndex={1}>\n        </GoogleMap>\n    </div>\n    )\n};\n\nexport default Map;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,GAAR,EAAaC,gBAAb,QAAqC,mBAArC;;AAEA,MAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM;IAACC,QAAD;IAAWC;EAAX,IAAwBC,aAAa,CAAC;IACxCC,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC,6BADU;IAExCR;EAFwC,CAAD,CAA3C;EAIA,MAAMS,MAAM,GAAGb,OAAO,CAAC,OAAO;IAAEc,GAAG,EAAE,EAAP;IAAWC,GAAG,EAAE,CAAC;EAAjB,CAAP,CAAD,EAAgC,EAAhC,CAAtB;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;EACA,MAAMmB,WAAW,GAAG,QAApB;EAEA,IAAGX,SAAH,EAAc,OAAO,0BAA0BA,SAAjC;EACd,IAAG,CAACD,QAAJ,EAAc,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;;EAEd,MAAMa,OAAO,GAAG,MAAK;IACjB,IAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBL,WAArB,CAAX,MAAkD,IAArD,EAA0D;MACtDD,SAAS,CAACG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBL,WAArB,CAAX,CAAD,CAAT;IACH;;IACD,oBACI;MAAA,UAEIM,MAAM,CAACC,OAAP,CAAeT,MAAf,EAAuBU,GAAvB,CAA4BV,MAAD,iBAAa,QAAC,MAAD;QAAQ,QAAQ,EAAE;UAAEF,GAAG,EAAEE,MAAM,CAAC,KAAD,CAAb;UAAsBD,GAAG,EAAEC,MAAM,CAAC,KAAD;QAAjC;MAAlB;QAAA;QAAA;QAAA;MAAA,QAAxC;IAFJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAQH,CAZD;;EAcA,oBACA;IAAA,wBACI,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,SAAD;MAAW,qBAAqB,EAAC,eAAjC;MAAiD,IAAI,EAAE,EAAvD;MAA2D,MAAM,EAAEH,MAAnE;MAA2E,MAAM,EAAE;IAAnF;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAOH,CAjCD;;GAAMR,K;;KAAAA,K;AAmCN,eAAeH,GAAf"},"metadata":{},"sourceType":"module"}